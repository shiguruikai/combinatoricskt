plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.2.51'
    id 'org.jetbrains.dokka' version '0.9.17'
}

group 'com.github.shiguruikai'
version '1.0.0'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    testImplementation "org.junit.jupiter:junit-jupiter-api:5.2.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.2.0"
}

apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'org.jetbrains.dokka'

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/dokka"
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

jar {
    manifest {
        attributes 'Implementation-Title': project.name,
                'Automatic-Module-Name': 'com.github.shiguruikai.combinatoricskt',
                'Implementation-Version': project.version
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = javadoc.destinationDir
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId project.name
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = project.name
                description = 'A combinatorics library for Kotlin'
                url = 'https://github.com/shiguruikai/combinatoricskt'
                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'shiguruikai'
                        name = 'Shigurui Kai'
                        email = 'kai.shigurui@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/shiguruikai/combinatoricskt.git'
                    developerConnection = 'scm:git:https://github.com/shiguruikai/combinatoricskt.git'
                    url = 'https://github.com/shiguruikai/combinatoricskt'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url project.version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = sonatypeUsername
                password = sonatypePassword
            }
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications.mavenJava
}
