plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
    id 'org.jetbrains.dokka' version '0.10.1'
}

group 'com.github.shiguruikai'
version '1.6.0'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.0'
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}
compileTestKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': project.version
        )
    }
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/dokka"
    configuration {
        jdkVersion = 8
        reportUndocumented = true
    }
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = javadoc.destinationDir
    configuration {
        jdkVersion = 8
        reportUndocumented = true
    }
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}


task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            pom {
                name = project.name
                description = 'A combinatorics library for Kotlin'
                url = 'https://github.com/shiguruikai/combinatoricskt'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/shiguruikai/combinatoricskt/blob/master/LICENSE'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'shiguruikai'
                        name = 'Shigurui Kai'
                        email = 'kai.shigurui@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/shiguruikai/combinatoricskt.git'
                    developerConnection = 'scm:git:https://github.com/shiguruikai/combinatoricskt.git'
                    url = 'https://github.com/shiguruikai/combinatoricskt'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
            def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots'
            url project.version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = sonatypeUsername
                password = sonatypePassword
            }
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications.maven
}
